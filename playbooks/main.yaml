- name: Check that vars are included and follow spec
  hosts: localhost
  tasks:
    - name: Check vars
      include_tasks: tasks/check_vars.yaml

- name: Install packages
  hosts: localhost
  tasks:
    - name: "Install apt package"
      become: true
      ansible.builtin.apt:
        name: "{{ item }}"
      loop: "{{ packages }}"
    - name: "Install snap packages"
      become: true
      ansible.builtin.command: "snap install {{ item.package }}"
      args:
        creates: "{{ item.creates }}"
      loop:
        - {package: slack, creates: /snap/bin/slack}


- name: Run install scripts
  hosts: localhost
  vars:
    user: "/home/{{ USERNAME }}"
  tasks:
    - name: "Run script"
      ansible.builtin.command: "bash ../scripts/{{ item.script }}"
      become: "{{ item.system }}"
      args:
        creates: "{{ item.creates }}"
      loop: "{{ scripts }}"
    - name: "Change user"
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        shell: /usr/bin/fish


- name: Install configurations
  hosts: localhost
  vars:
    user: "/home/{{ USERNAME }}"
    userid: "{{ USERNAME }}"
  tasks:
    - name: Create directories
      ansible.builtin.file:
        name: "{{ item }}"
        state: directory
        owner: "{{ userid }}"
        group: "{{ userid }}"
        mode: "0755"
      loop: "{{ directories }}"
    - name: Copy files 
      ansible.builtin.copy:
        src: "../conf/{{item.src}}"
        dest: "{{item.dest}}"
        owner: "{{ userid }}"
        group: "{{ userid }}"
        mode: "0644"
      loop: "{{ files }}"
    - name: Copy templates
      ansible.builtin.template:
        src: "../conf/{{item.src}}"
        dest: "{{item.dest}}"
        owner: "{{ userid }}"
        group: "{{ userid }}"
        mode: "0644"
      loop: "{{ templates }}"
    - name: Install nvim
      include_tasks: tasks/nvim.yaml
